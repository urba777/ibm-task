{"version":3,"sources":["components/UploadPage.jsx","components/Loading.jsx","components/AllImages.jsx","images/en.svg","images/lt.svg","components/Header.jsx","components/Footer.jsx","App.js","reportWebVitals.js","index.js"],"names":["UploadPage","props","useState","fileInputState","previewSource","setPreviewSource","imageName","setImageName","errorMessage","setErrorMessage","redirectNumber","setRedirectNumber","previewFile","file","reader","FileReader","readAsDataURL","onloadend","result","uploadImage","image","a","fetch","method","body","JSON","stringify","data","name","headers","console","error","language","className","style","textAlign","color","to","onClick","onSubmit","e","preventDefault","type","onChange","target","files","value","src","alt","placeholder","Loading","AllImages","imageIds","setImageIds","loadImages","response","json","useEffect","length","map","imageId","index","cloudName","publicId","width","height","crop","textTransform","slice","Header","englishIconBorderColor","setEnglishIconBorderColor","lithuanianIconBorderColor","setLithuanianIconBorderColor","border","setLanguage","enIcon","ltIcon","Footer","App","localStorage","getItem","setItem","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1269ca9a.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst UploadPage = props => {\r\n\r\n    const [fileInputState] = useState('');\r\n    const [previewSource, setPreviewSource] = useState('');\r\n    const [imageName, setImageName] = useState('');\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [redirectNumber, setRedirectNumber] = useState(0);\r\n\r\n    //adding file from input\r\n    const handleFileInputChange = (e) => {\r\n        const file = e.target.files[0];\r\n        previewFile(file);\r\n    }\r\n\r\n    //adding file name from input\r\n    const handleFileInputNameChange = (e) => {\r\n        e.preventDefault();\r\n        const value = e.target.value;\r\n        setImageName(value);\r\n    }\r\n\r\n    //shows the image that user selected to upload\r\n    const previewFile = (file) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onloadend = () => {\r\n            setPreviewSource(reader.result);\r\n        }\r\n    }\r\n\r\n    //file submit\r\n    const handleSubmitFile = (e) => {\r\n        e.preventDefault();\r\n        if (!previewSource) return;\r\n        uploadImage(previewSource);\r\n    }\r\n\r\n    //file upload\r\n    const uploadImage = async (image) => {\r\n        if (imageName && previewSource) {\r\n            try {\r\n                setRedirectNumber(1);\r\n                await fetch('/api/upload', {\r\n                    method: 'POST',\r\n                    body: JSON.stringify({ data: image, name: imageName }),\r\n                    headers: { 'Content-type': 'application/json' }\r\n                });\r\n            } catch (error) {\r\n                console.error(error);\r\n                setRedirectNumber(2);\r\n            }\r\n        } else {\r\n            if (!imageName && previewSource) {\r\n                setErrorMessage((props.language === 'en') ? 'Enter image name!' : 'Pavadinimo laukelis privalomas!');\r\n            } else if (!previewSource && imageName) {\r\n                setErrorMessage((props.language === 'en') ? 'Select photo to upload!' : 'Pasirinkite nuotrauką!');\r\n            } else if (!previewSource && !imageName) {\r\n                setErrorMessage((props.language === 'en') ? 'Select photo to upload and enter its name!' : 'Pasirinkite nuotrauką ir priskirkite jai pavadinimą!');\r\n            }\r\n        }\r\n    }\r\n\r\n    if (redirectNumber === 1) {\r\n        return (\r\n            <div className='uploadPage' style={{ textAlign: 'center' }}>\r\n                <h4 style={{ color: 'green', textAlign: 'center' }}>{(props.language === 'en') ? 'Image uploaded!' : 'Nuotrauka įkelta!'}</h4>\r\n                <h5 style={{ color: 'green', textAlign: 'center' }}>{(props.language === 'en') ? \"It may take some time for the server to display the new image. Go to the gallery and if you don't see the new image, try reloading the page.\" : 'Gali praeiti šiek tiek laiko, kol serveris parodys naują vaizdą. Jeigu galerijoje nematote naujo paveiksliuko - pabandykite perkrauti puslapį.'}</h5>\r\n                <Link to='/'>\r\n                    <button onClick={() => setRedirectNumber(0)} className='btn'>{(props.language === 'en') ? 'Gallery' : 'Galerija'}</button>\r\n                </Link>\r\n            </div>\r\n        );\r\n    } else if (redirectNumber === 2) {\r\n        return (\r\n            <div className='uploadPage' style={{ textAlign: 'center' }}>\r\n                <h4 style={{ color: 'red', textAlign: 'center' }}>{(props.language === 'en') ? 'Something is wrong with the server!' : 'Problemos su serveriu!'}</h4>\r\n                <Link to='/'>\r\n                    <button onClick={() => setRedirectNumber(0)} className='btn'>{(props.language === 'en') ? 'Home' : 'Pagrindinis'}</button>\r\n                </Link>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className='uploadPage'>\r\n                {!previewSource && (<h3 style={{ textAlign: 'center' }}>{(props.language === 'en') ? 'Select an image to upload.' : 'Pasirinkite nuotrauką įkėlimui'}</h3>)}\r\n                <form onSubmit={handleSubmitFile}>\r\n                    <input\r\n                        type='file'\r\n                        name='image'\r\n                        className=\"btn\"\r\n                        onChange={handleFileInputChange}\r\n                        value={fileInputState}\r\n                    />\r\n                    {previewSource && (<img className='previewImage' src={previewSource} alt='Preview' />)}\r\n                    {previewSource && (<input\r\n                        type='text'\r\n                        onChange={handleFileInputNameChange}\r\n                        placeholder={(props.language === 'en') ? 'Enter name' : 'Įveskite pavadinimą'}\r\n                        style={{ color: 'black' }}\r\n                    />)}\r\n\r\n                    {previewSource && (<button className=\"btn\" type=\"submit\">{(props.language === 'en') ? 'Upload' : 'Įkelti'}</button>)}\r\n                    <h4 style={{ color: 'red', textAlign: 'center' }}>{errorMessage}</h4>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UploadPage;","const Loading = () => {\r\n\r\n    //Book.css aprasyta klase\r\n    return (\r\n        <div className=\"lds-ellipsis\">\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loading;","import { useEffect, useState } from \"react\";\r\nimport { Image } from 'cloudinary-react';\r\nimport Loading from \"./Loading\";\r\n\r\nconst AllImages = (props) => {\r\n\r\n    const [imageIds, setImageIds] = useState([]);\r\n\r\n    const loadImages = async () => {\r\n        try {\r\n            const response = await fetch('api/images');\r\n            const data = await response.json();\r\n            setImageIds(data);\r\n            // console.log(data); //Shows array\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadImages();\r\n    }, []);\r\n\r\n    if (imageIds.length) {\r\n        return (\r\n            <>\r\n                <h1 className='galleryTitle'>{(props.language === 'en') ? 'Gallery' : 'Galerija'}</h1>\r\n                <div className='gallery'>\r\n                    {imageIds && imageIds.map((imageId, index) => (\r\n                        <div className='galleryItem' key={index}>\r\n                            <Image\r\n                                key={index}\r\n                                cloudName=\"urba-website\"\r\n                                publicId={imageId}\r\n                                width='200'\r\n                                height=\"300\"\r\n                                crop=\"scale\"\r\n                            />\r\n                            <div style={{ textTransform: 'capitalize' }} className=\"desc\">{imageId.slice(9)}</div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className='allImages'>\r\n                {imageIds && imageIds.map((index) => (\r\n                    <div key={index}>\r\n                        <Loading />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AllImages;","export default __webpack_public_path__ + \"static/media/en.ba1c7f5d.svg\";","export default __webpack_public_path__ + \"static/media/lt.4c19d3a9.svg\";","import { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport enIcon from '../images/en.svg'\r\nimport ltIcon from '../images/lt.svg'\r\n\r\nconst Header = (props) => {\r\n\r\n    const [englishIconBorderColor, setEnglishIconBorderColor] = useState('1px solid white');\r\n    const [lithuanianIconBorderColor, setLithuanianIconBorderColor] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (props.language === 'en') {\r\n            setEnglishIconBorderColor('1px solid white');\r\n            setLithuanianIconBorderColor('none');\r\n        } else if (props.language === 'lt') {\r\n            setEnglishIconBorderColor('none');\r\n            setLithuanianIconBorderColor('1px solid white');\r\n        }\r\n    }, [props.language]);\r\n\r\n    return (\r\n        <div className='header'>\r\n            <div className='headerWrapper'>\r\n                <div className='headerButtons'>\r\n                    <Link to='/'>\r\n                        <h5 className='headerButton'>{(props.language === 'en') ? 'Gallery' : 'Galerija'}</h5>\r\n                    </Link>\r\n                    <Link to='/upload'>\r\n                        <h5 className='headerButton'>{(props.language === 'en') ? 'Upload' : 'Įkelti'}</h5>\r\n                    </Link>\r\n                </div>\r\n                <div className='languages'>\r\n                    <img style={{ border: englishIconBorderColor }} onClick={() => props.setLanguage('en')} className='languageIcon' src={enIcon} alt='English'></img>\r\n                    <img style={{ border: lithuanianIconBorderColor }} onClick={() => props.setLanguage('lt')} className='languageIcon' src={ltIcon} alt='Lithuanian'></img>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import { Link } from 'react-router-dom';\r\n\r\nconst Footer = (props) => {\r\n\r\n    return (\r\n        <div className='footer'>\r\n            <div style={{color: 'rgba(255,255,255,0.5)'}}>\r\n                Deividas Urbanavičius | IBM {(props.language === 'en') ? 'task' : 'užduotis'} | 2021\r\n            </div>\r\n            <div className='footerButtons'>\r\n            <Link to='/'>\r\n                        <h5 className='headerButton'>{(props.language === 'en') ? 'Gallery' : 'Galerija'}</h5>\r\n                    </Link>\r\n                    <Link to='/upload'>\r\n                        <h5 className='headerButton'>{(props.language === 'en') ? 'Upload' : 'Įkelti'}</h5>\r\n                    </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","//Deividas Urbanavicius 2021.08 - IBM task\nimport './App.css';\nimport UploadPage from './components/UploadPage';\nimport React, { useEffect, useState } from 'react';\nimport AllImages from './components/AllImages';\nimport Header from './components/Header';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport Footer from './components/Footer';\n\nfunction App() {\n\n  //languages:\n  const [language, setLanguage] = useState((localStorage.getItem('language')) ? (localStorage.getItem('language')) : 'en');\n\n  useEffect(() => {\n    localStorage.setItem('language', language);\n  }, [language]);\n\n  return (\n    <Router>\n      <div className=\"mainWeb\">\n        <header>\n          <Header\n            language={language}\n            setLanguage={setLanguage}\n          />\n        </header>\n\n        <Route exact path='/upload'>\n          <main>\n            <UploadPage\n              language={language}\n            />\n          </main>\n        </Route>\n\n        <Route exact path='/'>\n          <main>\n            <AllImages\n              language={language}\n            />\n          </main>\n        </Route>\n\n        <Switch>\n          <Route path='*'> {/* cia gali buti bet kas bet tik su SWITCH*/}\n            <Redirect to='/'></Redirect>\n          </Route>\n        </Switch>\n\n        <footer>\n          <Footer\n            language={language}\n          />\n        </footer>\n      </div>\n\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}